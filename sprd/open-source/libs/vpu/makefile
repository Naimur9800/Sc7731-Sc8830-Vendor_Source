# ----------------------------------------------------------------------
#
# This makefile has been automatically generated by WinGDB 2.2, build 1191
# Do not edit.
#
# Project: vpurun
#
# ----------------------------------------------------------------------

PLATFORM=unix

ifneq ("$(windir)","")
PLATFORM=windows
endif

ifneq ("$(WinDir)","")
PLATFORM=windows
endif

ifneq ("$(WINDIR)","")
PLATFORM=windows
endif

UNAME=$(shell uname -o)

ifeq ("$(UNAME)","Cygwin")
PLATFORM=cygwin
endif

ifeq ("$(BUILD_CONFIGURATION)","")
	BUILD_CONFIGURATION=Debug
endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_Embedded_Linux")
CC= arm-none-linux-gnueabi-gcc.exe
CXX= arm-none-linux-gnueabi-g++.exe
AR= arm-none-linux-gnueabi-ar.exe
CFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
CXXFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
ARFLAGS= cru
LDFLAGS= -L./ffmpeg/lib/armlinux -L./theoraparser/ -lavformat -lavcodec -lavutil -lpthread -ltheoraparser -lm
RESULT=vpurun
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif
VPATH= $(INTERMEDIATE_DIR):src:vdi:vdi/linux:vpuapi:vdi/windows
endif

ifeq ("$(BUILD_CONFIGURATION)","Release_Embedded_Linux")
CC= arm-none-linux-gnueabi-gcc.exe
CXX= arm-none-linux-gnueabi-g++.exe
AR= arm-none-linux-gnueabi-ar.exe
CFLAGS= -O3 -Wall -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
CXXFLAGS= -O3 -Wall-I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
ARFLAGS= cru
LDFLAGS= -L./ffmpeg/lib/armlinux -L./theoraparser/ -lavformat -lavcodec -lavutil -lpthread -ltheoraparser -lm
RESULT=vpurun
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif
VPATH= $(INTERMEDIATE_DIR):src:vdi:vdi/linux:vpuapi:vdi/windows
endif


ifeq ("$(BUILD_CONFIGURATION)","Debug_Mingw")
CC= gcc.exe
CXX= g++.exe
AR= ar.exe
CFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
CXXFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
ARFLAGS= cru
LDFLAGS= -L./ffmpeg/lib/win32 -L./theoraparser/ -lavformat -lavcodec -lavutil  -lpthread -ltheoraparser -lm
RESULT=vpurun.exe
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif
VPATH= $(INTERMEDIATE_DIR):src:vdi:vdi/windows:vpuapi
endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_NativeLinux")
CC= gcc
CXX= g++
AR= ar
CFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include -DCNM_FPGA_PLATFORM
CXXFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include -I./ffmpeg/include
ARFLAGS= cru
LDFLAGS= -L./ffmpeg/lib/nativelinux -L./theoraparser/ -lavformat -lavcodec -lavutil -lpthread -ltheoraparser -lm 


RESULT=vpurun
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif
VPATH= $(INTERMEDIATE_DIR):src:vdi:vdi/linux:vpuapi:vdi/windows
endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_NonOS")
CC= arm-none-eabi-gcc.exe
CXX= arm-none-eabi-g++.exe
AR= arm-none-eabi-ar.exe
CFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include
CXXFLAGS= -g -I./theoraparser/include -I./vpuapi -I./include
ARFLAGS= cru
LDFLAGS= -lc
RESULT=vpurun
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif
VPATH= $(INTERMEDIATE_DIR):src:vdi:vdi/nonos:vpuapi:vdi/windows
endif

SOURCES= cdb.c hpi.c main.c mixer.c mm.c vdi.c vdi_osal.c vpuapi.c vpuapifunc.c vpuhelper.c vpuio.c vpurun.c

SOURCEPATHS= src/cdb.c src/main.c src/mixer.c src/vpuhelper.c src/vpuio.c src/vpurun.c vdi/linux/hpi.c vdi/linux/vdi.c vdi/linux/vdi_osal.c vdi/mm.c vdi/nonos/vdi.c vdi/nonos/vdi_osal.c vdi/windows/hpi.c vdi/windows/vdi.c vdi/windows/vdi_osal.c vpuapi/vpuapi.c vpuapi/vpuapifunc.c

HEADERS= cdb.h config.h hpi.h mixer.h mm.h regdefine.h vdi.h vdi_osal.h vpuapi.h vpuapifunc.h vpuconfig.h vpuhelper.h vpuio.h vpurun.h vputypes.h



OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCES)))
OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(OBJECTNAMES))

$(DESTINATION_DIR)/$(RESULT): $(OBJECTNAMES)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
	$(CC) $(CFLAGS) $(SYSROOTFLAGS) $(OBJECTPATHS) -o $@ $(LDFLAGS)

$(INTERMEDIATE_DIR)/vpurun.d: $(SOURCES) $(HEADERS)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CXX) $(CXXFLAGS) -MM $(SOURCEPATHS) > $@

-include $(INTERMEDIATE_DIR)/vpurun.d

clean:
	$(RM) $(DESTINATION_DIR)/$(RESULT)
	$(RM) $(INTERMEDIATE_DIR)/vpurun.d
	$(RM) $(OBJECTPATHS)

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<

%.o: %.c
	$(CC) $(CFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<
